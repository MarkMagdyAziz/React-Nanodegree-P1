{"version":3,"sources":["BooksAPI.js","components/Book.js","components/SearchInputPage.js","components/CurrentlyReadingShelf.js","components/WantToReadShelf.js","components/Read.js","components/MainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","props","currShelf","shelfChanger","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","event","target","value","disabled","title","authors","publishedDate","SearchInputPage","state","fetchedBooks","handleQuery","_this","setState","handleFetchedBooks","BooksAPI","error","_this2","this","react_router_dom","to","type","placeholder","map","shelfStatus","cmpBooks","cmpBook","key","components_Book","Component","CurrentlyReadingShelf","filter","WantToReadShelf","Read","MainPage","components_CurrentlyReadingShelf","components_WantToReadShelf","components_Read","BooksApp","_this3","react_router","exact","path","render","components_MainPage","assign","components_SearchInputPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.29e65a99.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Book = (props) => {\r\n  {\r\n    let { book, currShelf, shelfChanger } = props;\r\n    // let { shelfChanger } = this.props;\r\n    //console.log(\"book\", book);\r\n    // let handleChanger = (event) => {\r\n    //   shelfChanger = (event) => (book, event.target.value);\r\n    // };\r\n\r\n    return (\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${\r\n                book.imageLinks\r\n                  ? book.imageLinks.thumbnail\r\n                  : \"icons/book-placeholder.svg\"\r\n              })`,\r\n            }}\r\n          />\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              onChange={(event) => shelfChanger(book, event.target.value)}\r\n              value={currShelf}\r\n            >\r\n              {/* {console.log(\"book.shelf\" + book.shelf)} */}\r\n              <option value=\"move\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">{book.authors}</div>\r\n        <div className=\"book-published-date\">{book.publishedDate}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from \"./Book\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../App.css\";\r\n\r\nclass SearchInputPage extends Component {\r\n  state = { fetchedBooks: [], query: \"\" };\r\n\r\n  /*handleQuery = (query) => {\r\n    //let query = this.state.query;\r\n    this.setState({ query: query.target.value });\r\n    this.handleFetchedBooks(query);\r\n    //console.log(query);\r\n  };*/\r\n  handleQuery = (query) => {\r\n    this.setState({ query: query });\r\n    this.handleFetchedBooks(query);\r\n  };\r\n\r\n  handleFetchedBooks = (query) => {\r\n    //console.log(\"Hello from handleFetched func => query \", query);\r\n    if (query) {\r\n      BooksAPI.search(query).then((fetchedBooks) => {\r\n        if (fetchedBooks.error) {\r\n          this.setState({ fetchedBooks: [] });\r\n        } else {\r\n          this.setState({ fetchedBooks: fetchedBooks });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ fetchedBooks: [] });\r\n    }\r\n  };\r\n  render() {\r\n    //console.log(BooksAPI.search);\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <div className=\"close-search\">\r\n            <Link to=\"/\">\r\n              <button className=\"close-search\">close</button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={(event) => this.handleQuery(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.state.fetchedBooks.map((book) => {\r\n              let shelfStatus = \"none\";\r\n\r\n              this.props.cmpBooks.map((cmpBook) =>\r\n                cmpBook.id === book.id ? (shelfStatus = cmpBook.shelf) : \"\"\r\n              );\r\n              return (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    shelfChanger={this.props.shelfChanger}\r\n                    currShelf={shelfStatus}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchInputPage.propTypes = {\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default SearchInputPage;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CurrentlyReadingShelf = (props) => {\r\n  let { books, shelfChanger } = props;\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books\r\n            .filter((book) => book.shelf === \"currentlyReading\")\r\n            .map((book) => (\r\n              <li key={book.id}>\r\n                <Book\r\n                  book={book}\r\n                  shelfChanger={shelfChanger}\r\n                  currShelf=\"currentlyReading\"\r\n                />\r\n              </li>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nCurrentlyReadingShelf.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default CurrentlyReadingShelf;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst WantToReadShelf = (props) => {\r\n  let { books, shelfChanger } = props;\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books\r\n            .filter((book) => book.shelf === \"wantToRead\")\r\n            .map((book) => (\r\n              <li key={book.id}>\r\n                <Book\r\n                  book={book}\r\n                  shelfChanger={shelfChanger}\r\n                  currShelf=\"wantToRead\"\r\n                />\r\n              </li>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nWantToReadShelf.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default WantToReadShelf;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Read = (props) => {\r\n  let { books, shelfChanger } = props;\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">Read</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books\r\n            .filter((book) => book.shelf === \"read\")\r\n            .map((book) => (\r\n              <li key={book.id}>\r\n                <Book\r\n                  book={book}\r\n                  shelfChanger={shelfChanger}\r\n                  currShelf=\"read\"\r\n                />\r\n              </li>\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nRead.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default Read;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport CurrentlyReadingShelf from \"./CurrentlyReadingShelf\";\r\nimport WantToReadShelf from \"./WantToReadShelf\";\r\nimport Read from \"./Read\";\r\n\r\nconst MainPage = (props) => {\r\n  const { books } = props;\r\n  //console.log(\"books\", this.props.books);\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads APP</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <CurrentlyReadingShelf\r\n            books={books}\r\n            shelfChanger={props.shelfChanger}\r\n          />\r\n          <WantToReadShelf books={books} shelfChanger={props.shelfChanger} />\r\n          <Read books={books} shelfChanger={props.shelfChanger} />\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">\r\n          <button>search</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nMainPage.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default MainPage;\r\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport SearchInputPage from \"./components/SearchInputPage\";\nimport MainPage from \"./components/MainPage\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n/**\n * TODO: Instead of using this state variable to keep track of which page\n * we're on, use the URL in the browser's address bar. This will ensure that\n * users can use the browser's back and forward buttons to navigate between\n * pages, as well as provide a good URL they can bookmark and share.\n */\n\n/**\n * NOTES: The search from BooksAPI is limited to a particular set of search terms.\n * You can find these search terms here:\n * https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n * However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n * you don't find a specific author or title. Every search is limited by search terms.\n */\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState(() => ({ books: books }));\n    });\n  }\n  shelfChanger = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n    BooksAPI.getAll().then((books) => {\n      this.setState(() => ({ books: books }));\n    });\n  };\n  render() {\n    const { books } = this.state;\n    //console.log(\"books\", books);\n    return (\n      <div>\n        {/* <MainPage books={books} shelfChanger={this.shelfChanger} />\n        <SearchInputPage shelfChanger={this.shelfChanger} /> */}\n        <Router>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <MainPage\n                {...props}\n                books={books}\n                shelfChanger={this.shelfChanger}\n              />\n            )}\n          />\n          <Route\n            path=\"/search\"\n            render={(props) => (\n              <SearchInputPage\n                {...props}\n                shelfChanger={this.shelfChanger}\n                cmpBooks={books}\n              />\n            )}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}